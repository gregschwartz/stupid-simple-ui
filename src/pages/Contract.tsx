import * as React from "react";
import { useParams } from "react-router-dom";
import { FormEvent } from 'react';
import { ethers } from "ethers";


// function Field({ name: string, type: string, internalType: string }) {
//   let options = {};
//   let htmlType = "text";

//   if(type=="uint256") {htmlType = "number";}

//   if(type=="address") {
//     options["minlength"]=42
//     options["maxlength"]=42
//   }

//   return <div className='formInput'>
//     {/* {options.map((k) => {
//       return (k);
//     })} */}
//     <input
//       type={htmlType}
//       name={name ? name : type}
//       className={name ? name : type}
//       required
//       value="hi"
//     />
//   </div>; 
// }

//prevent error: Property 'ethereum' does not exist on type Window 
declare global {
  interface Window{
    ethereum?:any
  }
}


export default function Contract() {
  const { chain, address } = useParams();

  const gregTokenAbiAsString = `{
    "_format": "hh-sol-artifact-1",
    "contractName": "GregToken",
    "sourceName": "contracts/GregToken.sol",
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Approval",
        "type": "event"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": true,
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "indexed": true,
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "value",
            "type": "uint256"
          }
        ],
        "name": "Transfer",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "owner",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          }
        ],
        "name": "allowance",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "approve",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "account",
            "type": "address"
          }
        ],
        "name": "balanceOf",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "decimals",
        "outputs": [
          {
            "internalType": "uint8",
            "name": "",
            "type": "uint8"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "subtractedValue",
            "type": "uint256"
          }
        ],
        "name": "decreaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "spender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "addedValue",
            "type": "uint256"
          }
        ],
        "name": "increaseAllowance",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "name",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "symbol",
        "outputs": [
          {
            "internalType": "string",
            "name": "",
            "type": "string"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "totalSupply",
        "outputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transfer",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "address",
            "name": "from",
            "type": "address"
          },
          {
            "internalType": "address",
            "name": "to",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "amount",
            "type": "uint256"
          }
        ],
        "name": "transferFrom",
        "outputs": [
          {
            "internalType": "bool",
            "name": "",
            "type": "bool"
          }
        ],
        "stateMutability": "nonpayable",
        "type": "function"
      }
    ],
    "bytecode": "0x60806040523480156200001157600080fd5b506040518060400160405280600981526020017f47726567546f6b656e00000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f474747000000000000000000000000000000000000000000000000000000000081525081600390816200008f9190620004b6565b508060049081620000a19190620004b6565b505050620000bf3368056bc75e2d63100000620000c560201b60201c565b620006b8565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000137576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012e90620005fe565b60405180910390fd5b6200014b600083836200023260201b60201c565b80600260008282546200015f91906200064f565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516200021291906200069b565b60405180910390a36200022e600083836200023760201b60201c565b5050565b505050565b505050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002be57607f821691505b602082108103620002d457620002d362000276565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200033e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002ff565b6200034a8683620002ff565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000397620003916200038b8462000362565b6200036c565b62000362565b9050919050565b6000819050919050565b620003b38362000376565b620003cb620003c2826200039e565b8484546200030c565b825550505050565b600090565b620003e2620003d3565b620003ef818484620003a8565b505050565b5b8181101562000417576200040b600082620003d8565b600181019050620003f5565b5050565b601f82111562000466576200043081620002da565b6200043b84620002ef565b810160208510156200044b578190505b620004636200045a85620002ef565b830182620003f4565b50505b505050565b600082821c905092915050565b60006200048b600019846008026200046b565b1980831691505092915050565b6000620004a6838362000478565b9150826002028217905092915050565b620004c1826200023c565b67ffffffffffffffff811115620004dd57620004dc62000247565b5b620004e98254620002a5565b620004f68282856200041b565b600060209050601f8311600181146200052e576000841562000519578287015190505b62000525858262000498565b86555062000595565b601f1984166200053e86620002da565b60005b82811015620005685784890151825560018201915060208501945060208101905062000541565b8683101562000588578489015162000584601f89168262000478565b8355505b6001600288020188555050505b505050505050565b600082825260208201905092915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000620005e6601f836200059d565b9150620005f382620005ae565b602082019050919050565b600060208201905081810360008301526200061981620005d7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006200065c8262000362565b9150620006698362000362565b925082820190508082111562000684576200068362000620565b5b92915050565b620006958162000362565b82525050565b6000602082019050620006b260008301846200068a565b92915050565b61122f80620006c86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea26469706673582212209ad8c04a95f9cc28dbb69852a1a8fd7b3dbffcac001aee4fde44c297679825be64736f6c63430008110033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b0c565b60405180910390f35b6100e660048036038101906100e19190610bc7565b610308565b6040516100f39190610c22565b60405180910390f35b61010461032b565b6040516101119190610c4c565b60405180910390f35b610134600480360381019061012f9190610c67565b610335565b6040516101419190610c22565b60405180910390f35b610152610364565b60405161015f9190610cd6565b60405180910390f35b610182600480360381019061017d9190610bc7565b61036d565b60405161018f9190610c22565b60405180910390f35b6101b260048036038101906101ad9190610cf1565b6103a4565b6040516101bf9190610c4c565b60405180910390f35b6101d06103ec565b6040516101dd9190610b0c565b60405180910390f35b61020060048036038101906101fb9190610bc7565b61047e565b60405161020d9190610c22565b60405180910390f35b610230600480360381019061022b9190610bc7565b6104f5565b60405161023d9190610c22565b60405180910390f35b610260600480360381019061025b9190610d1e565b610518565b60405161026d9190610c4c565b60405180910390f35b60606003805461028590610d8d565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d8d565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610770565b6103588585856107fc565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610ded565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d8d565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d8d565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610e93565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fc565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060d90610f25565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610685576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067c90610fb7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107639190610c4c565b60405180910390a3505050565b600061077c8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f657818110156107e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107df90611023565b60405180910390fd5b6107f584848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361086b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610862906110b5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d190611147565b60405180910390fd5b6108e5838383610a72565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610962906111d9565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a599190610c4c565b60405180910390a3610a6c848484610a77565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ab6578082015181840152602081019050610a9b565b60008484015250505050565b6000601f19601f8301169050919050565b6000610ade82610a7c565b610ae88185610a87565b9350610af8818560208601610a98565b610b0181610ac2565b840191505092915050565b60006020820190508181036000830152610b268184610ad3565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b5e82610b33565b9050919050565b610b6e81610b53565b8114610b7957600080fd5b50565b600081359050610b8b81610b65565b92915050565b6000819050919050565b610ba481610b91565b8114610baf57600080fd5b50565b600081359050610bc181610b9b565b92915050565b60008060408385031215610bde57610bdd610b2e565b5b6000610bec85828601610b7c565b9250506020610bfd85828601610bb2565b9150509250929050565b60008115159050919050565b610c1c81610c07565b82525050565b6000602082019050610c376000830184610c13565b92915050565b610c4681610b91565b82525050565b6000602082019050610c616000830184610c3d565b92915050565b600080600060608486031215610c8057610c7f610b2e565b5b6000610c8e86828701610b7c565b9350506020610c9f86828701610b7c565b9250506040610cb086828701610bb2565b9150509250925092565b600060ff82169050919050565b610cd081610cba565b82525050565b6000602082019050610ceb6000830184610cc7565b92915050565b600060208284031215610d0757610d06610b2e565b5b6000610d1584828501610b7c565b91505092915050565b60008060408385031215610d3557610d34610b2e565b5b6000610d4385828601610b7c565b9250506020610d5485828601610b7c565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610da557607f821691505b602082108103610db857610db7610d5e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610df882610b91565b9150610e0383610b91565b9250828201905080821115610e1b57610e1a610dbe565b5b92915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610e7d602583610a87565b9150610e8882610e21565b604082019050919050565b60006020820190508181036000830152610eac81610e70565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f0f602483610a87565b9150610f1a82610eb3565b604082019050919050565b60006020820190508181036000830152610f3e81610f02565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fa1602283610a87565b9150610fac82610f45565b604082019050919050565b60006020820190508181036000830152610fd081610f94565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061100d601d83610a87565b915061101882610fd7565b602082019050919050565b6000602082019050818103600083015261103c81611000565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061109f602583610a87565b91506110aa82611043565b604082019050919050565b600060208201905081810360008301526110ce81611092565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611131602383610a87565b915061113c826110d5565b604082019050919050565b6000602082019050818103600083015261116081611124565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111c3602683610a87565b91506111ce82611167565b604082019050919050565b600060208201905081810360008301526111f2816111b6565b905091905056fea26469706673582212209ad8c04a95f9cc28dbb69852a1a8fd7b3dbffcac001aee4fde44c297679825be64736f6c63430008110033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }`;
  
  let abi = JSON.parse(gregTokenAbiAsString);
  let contractAddress = "0x04f5FBcCfC5C5ca62C84Cc5Bb71bD99a6cA43874";
  let provider = ethers.getDefaultProvider(process.env.REACT_APP_ALCHEMY_URL, {"alchemy": process.env.REACT_APP_ALCHEMY_API_KEY});
  let contract = new ethers.Contract(contractAddress, abi.abi, provider);
  // console.log(contract);
  
  const connectWallet = async () => {
    const provider = new ethers.BrowserProvider(window.ethereum, "any");
    await provider.send("eth_requestAccounts", []);
    const signer = await provider.getSigner();
    console.log("Account:", await signer.getAddress());
    contract.connect(signer);
    console.log("connected with that account");
  };

  function showResult(form: HTMLFormElement, message: string) {
    let responseCells = form.getElementsByClassName("responseCell");
    if(responseCells.length > 0) {
      let cell = responseCells[0] as HTMLDivElement;
      cell.innerHTML = message;
    } else {
      alert("Cannot find where to show result, which is: " + message);
    }
  }

  const handleSubmit = async (event: FormEvent) => {
    // Stop the form from submitting and refreshing the page.
    event.preventDefault();
    

    const form = event.target as HTMLFormElement;
    console.log("call contract's method: ", form.name);

    //future, this won't work with SELECTs nor radio buttons...
    let params:String[] = [];
    const inputs = form.getElementsByTagName("input");
    for(let i=0; i<inputs.length; i++) {
      params.push( inputs[i].value );
    }
    console.log("with these parameters", params);

    try {
      let result = await contract[`${form.name}`](...params);
      console.log("result", result);
      showResult(form, result);
    } catch(x) {
      console.log("caught", x);

      let reason = "";

      if(x.reason === "sending a transaction requires a signer") {
        reason = "Please click Connect Wallet at the top of the screen.";
      } else {
        reason = (x.reason !== undefined ? x.reason : (
          x.message !== undefined ? x.message : x
        ))
      }

      showResult(form, reason);
    }

  }

  return (
    <div>
      <h1>Contract</h1>
      <h2>Chain: {chain}, Address: {address}</h2>
      <div className='container'>
          <div className='header'>
            <label>{abi.contractName}</label>
            <button id="connectWallet" onClick={connectWallet}>Connect Wallet</button>
          </div>

          <div className='formSection'>
            {abi.abi.map((functionOrObject) => {
              if (!functionOrObject.name || functionOrObject.type==="event") { return; }
        
              return (
                <form onSubmit={handleSubmit} className='solidityForm' name={functionOrObject.name} key={functionOrObject.name}>
                  <h2 style={{"color":"Black"}}>{functionOrObject.name}</h2>

                  {(functionOrObject.stateMutability === "payable" ? (
                    <div className='addressSection formRow'>
                      <div className='formLabel'>
                        <label htmlFor="contractAddres">boldAmount</label> 
                      </div>
                      {/* <Field name="Amount" type="uint256" internalType="uint256" /> */}
                      <input type="number" id="amount" name="amount" className='amount' required />   
                    </div>
                  ) : "")}

                  {functionOrObject.inputs.map((input) => {
                    return (
                      <div className='addressSection formRow' key={input.name}>
                        <div className='formLabel'>
                          <label htmlFor="contractAddres">{input.name}</label> 
                        </div>
                        <div className='formInput'>
                          <input type="text" id="contractAddres" name="contractAddres" className='contractAddress' required />   
                        </div>                                          
                      </div>
                    );
                  })}

                  <div className='formRow'>
                    <div className='formLabel'>
                      <></>
                    </div>
                    <div className='formInput'>
                      <button type="submit" className='submit'>Submit</button>
                    </div>
                  </div>
                  
                  {functionOrObject.outputs.map((output) => {
                    return ( 
                      <div className='formRow response' key={output.type}>
                        <div className='formLabel'>
                          <></>
                        </div>
                        <div className='formInput responseCell'>
                          {output.name ? output.name : "Returns"}: {output.type}
                        </div>
                      </div>
                    );
                  })}
                </form>
              );
            })}
          </div>
        </div>
    </div>
  );
}


/*
  const guestBookAbiAsString = `{
    "_format": "hh-sol-artifact-1",
    "contractName": "GuestBook",
    "sourceName": "contracts/GuestBook.sol",
    "abi": [
      {
        "inputs": [],
        "stateMutability": "nonpayable",
        "type": "constructor"
      },
      {
        "anonymous": false,
        "inputs": [
          {
            "indexed": false,
            "internalType": "string",
            "name": "message",
            "type": "string"
          },
          {
            "indexed": false,
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "indexed": false,
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "name": "NewEntryAdded",
        "type": "event"
      },
      {
        "inputs": [
          {
            "internalType": "string",
            "name": "_message",
            "type": "string"
          }
        ],
        "name": "addEntry",
        "outputs": [],
        "stateMutability": "payable",
        "type": "function"
      },
      {
        "inputs": [
          {
            "internalType": "uint256",
            "name": "",
            "type": "uint256"
          }
        ],
        "name": "entries",
        "outputs": [
          {
            "internalType": "string",
            "name": "message",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "sender",
            "type": "address"
          },
          {
            "internalType": "uint256",
            "name": "timestamp",
            "type": "uint256"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      },
      {
        "inputs": [],
        "name": "getEntries",
        "outputs": [
          {
            "components": [
              {
                "internalType": "string",
                "name": "message",
                "type": "string"
              },
              {
                "internalType": "address",
                "name": "sender",
                "type": "address"
              },
              {
                "internalType": "uint256",
                "name": "timestamp",
                "type": "uint256"
              }
            ],
            "internalType": "struct GuestBook.Entry[]",
            "name": "",
            "type": "tuple[]"
          }
        ],
        "stateMutability": "view",
        "type": "function"
      }
    ],
    "bytecode": "0x60806040523480156200001157600080fd5b50600060405180606001604052806040518060400160405280601081526020017f5468652067656e6573697320706f73740000000000000000000000000000000081525081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020014281525090806001815401808255809150506001900390600052602060002090600302016000909190919091506000820151816000019081620000ba91906200038e565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155505062000475565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200019657607f821691505b602082108103620001ac57620001ab6200014e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620001d7565b620002228683620001d7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200026f6200026962000263846200023a565b62000244565b6200023a565b9050919050565b6000819050919050565b6200028b836200024e565b620002a36200029a8262000276565b848454620001e4565b825550505050565b600090565b620002ba620002ab565b620002c781848462000280565b505050565b5b81811015620002ef57620002e3600082620002b0565b600181019050620002cd565b5050565b601f8211156200033e576200030881620001b2565b6200031384620001c7565b8101602085101562000323578190505b6200033b6200033285620001c7565b830182620002cc565b50505b505050565b600082821c905092915050565b6000620003636000198460080262000343565b1980831691505092915050565b60006200037e838362000350565b9150826002028217905092915050565b620003998262000114565b67ffffffffffffffff811115620003b557620003b46200011f565b5b620003c182546200017d565b620003ce828285620002f3565b600060209050601f831160018114620004065760008415620003f1578287015190505b620003fd858262000370565b8655506200046d565b601f1984166200041686620001b2565b60005b82811015620004405784890151825560018201915060208501945060208101905062000419565b868310156200046057848901516200045c601f89168262000350565b8355505b6001600288020188555050505b505050505050565b610bab80620004856000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806317be85c31461004657806317ce42bd14610064578063b30906d414610080575b600080fd5b61004e6100b2565b60405161005b91906105e4565b60405180910390f35b61007e6004803603810190610079919061074f565b610203565b005b61009a600480360381019061009591906107c4565b610306565b6040516100a993929190610859565b60405180910390f35b60606000805480602002602001604051908101604052809291908181526020016000905b828210156101fa5783829060005260206000209060030201604051806060016040529081600082018054610109906108c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610135906108c6565b80156101825780601f1061015757610100808354040283529160200191610182565b820191906000526020600020905b81548152906001019060200180831161016557829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481525050815260200190600101906100d6565b50505050905090565b600060405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190816102749190610aa3565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550507fbcd9f27f44c6e501e03c10f091c3daf5af91bd7935a3af2a5218c076a23f551c8133426040516102fb93929190610859565b60405180910390a150565b6000818154811061031657600080fd5b9060005260206000209060030201600091509050806000018054610339906108c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610365906108c6565b80156103b25780601f10610387576101008083540402835291602001916103b2565b820191906000526020600020905b81548152906001019060200180831161039557829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561044e578082015181840152602081019050610433565b60008484015250505050565b6000601f19601f8301169050919050565b600061047682610414565b610480818561041f565b9350610490818560208601610430565b6104998161045a565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104cf826104a4565b9050919050565b6104df816104c4565b82525050565b6000819050919050565b6104f8816104e5565b82525050565b6000606083016000830151848203600086015261051b828261046b565b915050602083015161053060208601826104d6565b50604083015161054360408601826104ef565b508091505092915050565b600061055a83836104fe565b905092915050565b6000602082019050919050565b600061057a826103e8565b61058481856103f3565b93508360208202850161059685610404565b8060005b858110156105d257848403895281516105b3858261054e565b94506105be83610562565b925060208a0199505060018101905061059a565b50829750879550505050505092915050565b600060208201905081810360008301526105fe818461056f565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61065c8261045a565b810181811067ffffffffffffffff8211171561067b5761067a610624565b5b80604052505050565b600061068e610606565b905061069a8282610653565b919050565b600067ffffffffffffffff8211156106ba576106b9610624565b5b6106c38261045a565b9050602081019050919050565b82818337600083830152505050565b60006106f26106ed8461069f565b610684565b90508281526020810184848401111561070e5761070d61061f565b5b6107198482856106d0565b509392505050565b600082601f8301126107365761073561061a565b5b81356107468482602086016106df565b91505092915050565b60006020828403121561076557610764610610565b5b600082013567ffffffffffffffff81111561078357610782610615565b5b61078f84828501610721565b91505092915050565b6107a1816104e5565b81146107ac57600080fd5b50565b6000813590506107be81610798565b92915050565b6000602082840312156107da576107d9610610565b5b60006107e8848285016107af565b91505092915050565b600082825260208201905092915050565b600061080d82610414565b61081781856107f1565b9350610827818560208601610430565b6108308161045a565b840191505092915050565b610844816104c4565b82525050565b610853816104e5565b82525050565b600060608201905081810360008301526108738186610802565b9050610882602083018561083b565b61088f604083018461084a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108de57607f821691505b6020821081036108f1576108f0610897565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261091c565b610963868361091c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109a061099b610996846104e5565b61097b565b6104e5565b9050919050565b6000819050919050565b6109ba83610985565b6109ce6109c6826109a7565b848454610929565b825550505050565b600090565b6109e36109d6565b6109ee8184846109b1565b505050565b5b81811015610a1257610a076000826109db565b6001810190506109f4565b5050565b601f821115610a5757610a28816108f7565b610a318461090c565b81016020851015610a40578190505b610a54610a4c8561090c565b8301826109f3565b50505b505050565b600082821c905092915050565b6000610a7a60001984600802610a5c565b1980831691505092915050565b6000610a938383610a69565b9150826002028217905092915050565b610aac82610414565b67ffffffffffffffff811115610ac557610ac4610624565b5b610acf82546108c6565b610ada828285610a16565b600060209050601f831160018114610b0d5760008415610afb578287015190505b610b058582610a87565b865550610b6d565b601f198416610b1b866108f7565b60005b82811015610b4357848901518255600182019150602085019450602081019050610b1e565b86831015610b605784890151610b5c601f891682610a69565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220bfbbcebc9c62c57aaa2dffd402801c95b3cd40da69bc0fd88874f4024bbd508164736f6c63430008110033",
    "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806317be85c31461004657806317ce42bd14610064578063b30906d414610080575b600080fd5b61004e6100b2565b60405161005b91906105e4565b60405180910390f35b61007e6004803603810190610079919061074f565b610203565b005b61009a600480360381019061009591906107c4565b610306565b6040516100a993929190610859565b60405180910390f35b60606000805480602002602001604051908101604052809291908181526020016000905b828210156101fa5783829060005260206000209060030201604051806060016040529081600082018054610109906108c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610135906108c6565b80156101825780601f1061015757610100808354040283529160200191610182565b820191906000526020600020905b81548152906001019060200180831161016557829003601f168201915b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481525050815260200190600101906100d6565b50505050905090565b600060405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200142815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000190816102749190610aa3565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550507fbcd9f27f44c6e501e03c10f091c3daf5af91bd7935a3af2a5218c076a23f551c8133426040516102fb93929190610859565b60405180910390a150565b6000818154811061031657600080fd5b9060005260206000209060030201600091509050806000018054610339906108c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610365906108c6565b80156103b25780601f10610387576101008083540402835291602001916103b2565b820191906000526020600020905b81548152906001019060200180831161039557829003601f168201915b5050505050908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154905083565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561044e578082015181840152602081019050610433565b60008484015250505050565b6000601f19601f8301169050919050565b600061047682610414565b610480818561041f565b9350610490818560208601610430565b6104998161045a565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104cf826104a4565b9050919050565b6104df816104c4565b82525050565b6000819050919050565b6104f8816104e5565b82525050565b6000606083016000830151848203600086015261051b828261046b565b915050602083015161053060208601826104d6565b50604083015161054360408601826104ef565b508091505092915050565b600061055a83836104fe565b905092915050565b6000602082019050919050565b600061057a826103e8565b61058481856103f3565b93508360208202850161059685610404565b8060005b858110156105d257848403895281516105b3858261054e565b94506105be83610562565b925060208a0199505060018101905061059a565b50829750879550505050505092915050565b600060208201905081810360008301526105fe818461056f565b905092915050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61065c8261045a565b810181811067ffffffffffffffff8211171561067b5761067a610624565b5b80604052505050565b600061068e610606565b905061069a8282610653565b919050565b600067ffffffffffffffff8211156106ba576106b9610624565b5b6106c38261045a565b9050602081019050919050565b82818337600083830152505050565b60006106f26106ed8461069f565b610684565b90508281526020810184848401111561070e5761070d61061f565b5b6107198482856106d0565b509392505050565b600082601f8301126107365761073561061a565b5b81356107468482602086016106df565b91505092915050565b60006020828403121561076557610764610610565b5b600082013567ffffffffffffffff81111561078357610782610615565b5b61078f84828501610721565b91505092915050565b6107a1816104e5565b81146107ac57600080fd5b50565b6000813590506107be81610798565b92915050565b6000602082840312156107da576107d9610610565b5b60006107e8848285016107af565b91505092915050565b600082825260208201905092915050565b600061080d82610414565b61081781856107f1565b9350610827818560208601610430565b6108308161045a565b840191505092915050565b610844816104c4565b82525050565b610853816104e5565b82525050565b600060608201905081810360008301526108738186610802565b9050610882602083018561083b565b61088f604083018461084a565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806108de57607f821691505b6020821081036108f1576108f0610897565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026109597fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261091c565b610963868361091c565b95508019841693508086168417925050509392505050565b6000819050919050565b60006109a061099b610996846104e5565b61097b565b6104e5565b9050919050565b6000819050919050565b6109ba83610985565b6109ce6109c6826109a7565b848454610929565b825550505050565b600090565b6109e36109d6565b6109ee8184846109b1565b505050565b5b81811015610a1257610a076000826109db565b6001810190506109f4565b5050565b601f821115610a5757610a28816108f7565b610a318461090c565b81016020851015610a40578190505b610a54610a4c8561090c565b8301826109f3565b50505b505050565b600082821c905092915050565b6000610a7a60001984600802610a5c565b1980831691505092915050565b6000610a938383610a69565b9150826002028217905092915050565b610aac82610414565b67ffffffffffffffff811115610ac557610ac4610624565b5b610acf82546108c6565b610ada828285610a16565b600060209050601f831160018114610b0d5760008415610afb578287015190505b610b058582610a87565b865550610b6d565b601f198416610b1b866108f7565b60005b82811015610b4357848901518255600182019150602085019450602081019050610b1e565b86831015610b605784890151610b5c601f891682610a69565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220bfbbcebc9c62c57aaa2dffd402801c95b3cd40da69bc0fd88874f4024bbd508164736f6c63430008110033",
    "linkReferences": {},
    "deployedLinkReferences": {}
  }`;
*/